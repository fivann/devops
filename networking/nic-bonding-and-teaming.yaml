nic_bonding_teaming:
  definition: | 
    "NIC bonding and teaming are methods to combine multiple network interfaces on a single host 
    to provide increased bandwidth, fault tolerance, and load balancing. 
    Bonding uses a single logical interface for multiple physical interfaces, 
    while teaming allows for more flexible and advanced configurations."

linux_commands:
  install_ifenslave:
    - command: "sudo apt-get install ifenslave"
      description: "Install ifenslave package on Ubuntu/Debian-based systems to configure NIC bonding."
  create_bond_interface:
    - command: "sudo nano /etc/network/interfaces"
      description: "Edit the network interfaces configuration file on Ubuntu/Debian-based systems."
      example: |
        auto bond0
        iface bond0 inet static
          address 192.168.1.100
          netmask 255.255.255.0
          gateway 192.168.1.1
          bond-slaves none
          bond-mode 802.3ad
          bond-miimon 100
  add_slave_interfaces:
    - command: "sudo nano /etc/network/interfaces"
      description: | 
        "Edit the network interfaces configuration file on Ubuntu/Debian-based systems 
        to add slave interfaces to the bond interface."
      example: |
        auto eth0
        iface eth0 inet manual
          bond-master bond0
          bond-primary eth0

        auto eth1
        iface eth1 inet manual
          bond-master bond0
  apply_changes:
    - command: "sudo systemctl restart networking"
      description: "Restart the networking service to apply changes."

pesudographics:
  nic_bonding_teaming_process: |
    +-------------+        +----------+        +-------------+
    |   eth0      |------->| Bond0 or |------->|   Switch    |
    +-------------+        |  Team0   |        +-------------+
    +-------------+        +----------+        +-------------+
    |   eth1      |--------------------------> |   Switch    |
    +-------------+                            +-------------+


---

bond_fault_tolerance_setup:
  definition: "Setting up NIC bonding with fault tolerance on Linux combines multiple network interfaces into a single logical interface, providing failover capabilities and increased reliability."

steps:
  1_install_ifenslave:
    - command: "sudo apt-get install ifenslave"
      description: "Install ifenslave package on Ubuntu/Debian-based systems to configure NIC bonding."
  2_create_bond_interface:
    - command: "sudo nano /etc/network/interfaces"
      description: "Edit the network interfaces configuration file on Ubuntu/Debian-based systems."
      example: |
        auto bond0
        iface bond0 inet static
          address 192.168.1.100
          netmask 255.255.255.0
          gateway 192.168.1.1
          bond-slaves none
          bond-mode active-backup
          bond-miimon 100
  3_add_slave_interfaces:
    - command: "sudo nano /etc/network/interfaces"
      description: "Edit the network interfaces configuration file on Ubuntu/Debian-based systems to add slave interfaces to the bond interface."
      example: |
        auto eth0
        iface eth0 inet manual
          bond-master bond0
          bond-primary eth0

        auto eth1
        iface eth1 inet manual
          bond-master bond0
  4_apply_changes:
    - command: "sudo systemctl restart networking"
      description: "Restart the networking service to apply changes."

pesudographics:
  bond_fault_tolerance_process: |
    +-----------------+        +----------+        +-------------+
    |   eth0 (active) |------->| Bond0    |------->|   Switch    |
    +-----------------+        | (active- |        +-------------+
    +-----------------+        |  backup) |
    |   eth1 (backup) |------->|          |
    +-----------------+        +----------+

---

team_fault_tolerance_setup:
  definition: |
    "Setting up NIC teaming with fault tolerance on Linux allows multiple network interfaces 
    to work together as a single logical interface, providing failover capabilities and increased reliability."

steps:
  1_install_teamd:
    - command: "sudo apt-get install -y teamd"
      description: "Install teamd package on Ubuntu/Debian-based systems to configure NIC teaming."
  2_create_teamd_config_file:
    - command: "sudo nano /etc/teamd/team0.conf"
      description: "Create a teamd configuration file for the team interface."
      example: |
        {
          "device": "team0",
          "runner": {"name": "activebackup"},
          "link_watch": {"name": "ethtool"},
          "ports": {"eth0": {}, "eth1": {}}
        }
  3_create_team_interface:
    - command: "sudo nano /etc/network/interfaces"
      description: "Edit the network interfaces configuration file on Ubuntu/Debian-based systems."
      example: |
        auto team0
        iface team0 inet static
          address 192.168.1.100
          netmask 255.255.255.0
          gateway 192.168.1.1
          teamdctl_config_file /etc/teamd/team0.conf
          teamdctl_options --d-bus=disable
  4_add_slave_interfaces:
    - command: "sudo nano /etc/network/interfaces"
      description: | 
        "Edit the network interfaces configuration file on Ubuntu/Debian-based systems 
        to add slave interfaces to the team interface."
      example: |
        auto eth0
        iface eth0 inet manual
          team-port team0

        auto eth1
        iface eth1 inet manual
          team-port team0
  5_apply_changes:
    - command: "sudo systemctl restart networking"
      description: "Restart the networking service to apply changes."

pesudographics:
  team_fault_tolerance_process: |
    +-------------+        +----------+        +-------------+
    |   eth0 (active)      | Team0    |------->|   Switch    |
    +-------------+------->| (active- |        +-------------+
    +-------------+        |  backup) |
    |   eth1 (backup)      |          |
    +-------------+------->|          |
                           +----------+


---
## LAB

create_interface_team:
  scenario: "Configure a new application server with primary interface eth0 (10.0.1.11), and team interfaces eth1 and eth2 as part of a team with round robin mode, static IP range 10.0.1.15/24, and gateway from DHCP."

steps:
  1_login:
    description: "Use the credentials and server IP in the hands-on lab overview page to log into the lab server."

  2_install_teamd:
    - command: "sudo yum -y install teamd bash-completion"
      description: "Install teamd and bash-completion packages."
    - command: "source /etc/profile"
      description: "Source the profile to apply changes."

  3_configure_team_interface:
    - command: "sudo nmcli con delete Wired\\ connection\\ 1"
    - command: "sudo nmcli con delete Wired\\ connection\\ 2"
      description: "Delete existing connections for eth1 and eth2."
    - command: "sudo nmcli con add type team con-name Team0 ifname team0"
      description: "Create the Team Connection with name Team0 and interface name team0."
    - command: "sudo nmcli con mod Team0 ipv4.address 10.0.1.15/24 ipv4.gateway 10.0.1.1 ipv4.method manual"
      description: "Modify the Team Connection to include the static IP and gateway."

  4_add_slave_interfaces:
    - command: "sudo nmcli con add type team-slave ifname eth1 con-name Slave1 master team0"
    - command: "sudo nmcli con add type team-slave ifname eth2 con-name Slave2 master team0"
      description: "Add slave interfaces eth1 and eth2 to the team."

  5_verify_team_state:
    - command: "nmcli c show Team0 | grep ipv4"
    - command: "sudo nmcli con up Team0"
    - command: "sudo nmcli con up Slave1"
    - command: "sudo nmcli con up Slave2"
      description: "Verify the team state and bring up the Team Connection and slave interfaces."
    - command: "sudo teamdctl team0 state"
      description: "Get details on the team state."

  6_verify_connectivity:
    - command: "ping 10.0.1.15"
      description: "Ping the team interface IP address to verify connectivity."

pesudographics:
  create_interface_team_process: |
    +-------------+        +-------------+     +-------------+
    |   eth0 (management) | eth1 (team)  |     |   Switch    |
    +-------------+        +-------------+---->+-------------+
    +-------------+        +-------------+
    |   eth2 (team)        |   Team0     |
    +-------------+------->+-------------+


