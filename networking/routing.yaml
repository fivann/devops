ip_command:
  1. Display current routing table:
     command: ip route show
  2. Add a static route:
     command: sudo ip route add <destination_network>/<prefix_length> via <gateway_ip> dev <interface_name>
     example: sudo ip route add 192.168.2.0/24 via 192.168.1.1 dev eth0
  3. Delete a static route:
     command: sudo ip route del <destination_network>/<prefix_length> via <gateway_ip> dev <interface_name>
     example: sudo ip route del 192.168.2.0/24 via 192.168.1.1 dev eth0
  4. Add a static route with a specific metric:
     command: sudo ip route add <destination_network>/<prefix_length> via <gateway_ip> dev <interface_name> metric <metric_value>
     example: sudo ip route add 192.168.2.0/24 via 192.168.1.1 dev eth0 metric 100
  5. Add a default gateway:
     command: sudo ip route add default via <gateway_ip> dev <interface_name>
     example: sudo ip route add default via 192.168.1.1 dev eth0

route_command:
  1. Display current routing table:
     command: route -n
  2. Add a static route:
     command: sudo route add -net <destination_network> netmask <subnet_mask> gw <gateway_ip> dev <interface_name>
     example: sudo route add -net 192.168.2.0 netmask 255.255.255.0 gw 192.168.1.1 dev eth0
  3. Delete a static route:
     command: sudo route del -net <destination_network> netmask <subnet_mask> gw <gateway_ip> dev <interface_name>
     example: sudo route del -net 192.168.2.0 netmask 255.255.255.0 gw 192.168.1.1 dev eth0
  4. Add a default gateway:
     command: sudo route add default gw <gateway_ip> dev <interface_name>
     example: sudo route add default gw 192.168.1.1 dev eth0

---

Routing Troubleshooting in Linux:

When troubleshooting routing issues in Linux, there are a few key commands that can help you diagnose and fix the problem.

1. Check IP configuration: |
     The first thing to check is the IP configuration of the system, 
     including IP address, netmask, default gateway, and DNS servers. 
     You can check this with the following commands:
   - ip addr show
   - ip route show
   - cat /etc/resolv.conf

2. Check network interface:
   Check that the network interface is up and running, and that it has the correct IP address and netmask. You can use the following commands:
   - ifconfig -a
   - ip link show

3. Ping test:
   Perform a ping test to confirm network connectivity. You can use the ping command:
   - ping <ip_address>
   - ping <hostname>

4. Check routing table:
   Check the routing table to see if the network packets are being routed correctly. You can use the following commands:
   - route
   - ip route show

5. Traceroute: | 
     Use the traceroute command to see the path taken by network packets as they travel from the source to the destination. 
     This can help you identify where the packets are being dropped. You can use the following command:
   - traceroute <hostname>

6. TCPDump: | 
     Use TCPDump to capture and analyze network traffic in real-time. 
     This can help you identify issues with packet loss, routing loops, and other network problems. 
     You can use the following command:
   - tcpdump -i <interface> <protocol> <port>

7. Netstat: | 
     Netstat is a useful tool for diagnosing network issues, including port conflicts, network congestion, 
     and other connectivity problems. You can use the following commands:
   - netstat -tulpn
   - netstat -rn

8. Firewall:
   Check the firewall configuration to ensure that the necessary ports are open for the network traffic. You can use the following command:
   - iptables -L

9. DNS:
   Check the DNS configuration to ensure that the hostname is resolving correctly. You can use the following command:
   - nslookup <hostname>
   - dig <hostname>


---
# LAB

lab:
  title: Working with Static Routes

description: |
  Your task is to create a script that modifies the routing table to prohibit connectivity to google.com 
  and to add an entry to use 10.0.1.20 as the gateway for the 10.0.8.0/24 subnet.

tasks:
  - login:
      description: Login to the lab server using the credentials provided
      command: ssh cloud_user@PUBLIC_IP_ADDRESS

  - become_root:
      description: Become the root user
      command: sudo su -

  - view_routing_table:
      description: View the routing table
      command: ip route show

  - install_bind_utils:
      description: Install the bind-utils package to get the IPs associated with google.com
      command: sudo apt-get update && sudo apt-get install -y bind-utils

  - get_google_ip:
      description: Get the IP address(es) of google.com
      command: host google.com

  - prohibit_connectivity:
      description: Prohibit connectivity to google.com using IP address
      command: ip route add prohibit <GOOGLE_IP>

  - add_gateway:
      description: Add an entry for the 10.0.8.0/24 network to use 10.0.1.20 as the gateway
      command: ip route add 10.0.8.0/24 via 10.0.1.20

  - create_script:
      description: Create a script that creates both entries
      command: |
        echo '#!/bin/bash\n' > /home/cloud_user/routes.sh
        echo 'ip route add prohibit <GOOGLE_IP>' >> /home/cloud_user/routes.sh
        echo 'ip route add 10.0.8.0/24 via 10.0.1.20' >> /home/cloud_user/routes.sh

conclusion:
  description: Congratulations â€” you've completed this hands-on lab!

