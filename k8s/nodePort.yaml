# Service Type: NodePort
# A Kubernetes nodePort service allows external traffic to be routed to the pods:
# Brief Description:
# https://youtu.be/eth7osiCryc
#
# PORTS TYPES
# NodePort - are 30000-32767 - port to access app from OUTSIDE the Cluster
# Port - port on the service itself / Service, NodePort
# TargerPort - port of APP is running on / ex. on Frontend Pod, Nginx etc.
# Typically Port = TargerPort
#
# Task:
# Create a new service to access this web application, check the requirements
# Figure out all necessary settings from the deployment
# Requirements:
# Name: hello-hello-service
# Type: NodePort
# Downstream Pod Port (Service targetPort): 80
#
# NodeIP
#
apiVersion: v1
kind: Service
metadata:
  name: hello-hello-service
spec:
  type: NodePort
  selector:
    app: hello-hello
  ports:
  - name: http
    port: 80
    targetPort: 80
#
# Verification
#
# $ kubectl get svc hello-hello-service 
# NAME                  TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE
# hello-hello-service   NodePort   10.102.32.98   <none>        80:32123/TCP   22m
#
# $ kubectl get ep hello-hello-service -o wide
# NAME                  ENDPOINTS                                         AGE
# hello-hello-service   10.244.0.9:80,10.244.1.27:80,10.244.1.28:80       22m
# 
# Documentation:
# https://kubernetes.io/docs/concepts/services-networking/service/#nodeport
# https://www.docker.com/blog/designing-your-first-application-kubernetes-communication-services-part3/
#
#
# Another example:
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
# add nodePort
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 80
    nodePort: 31000

