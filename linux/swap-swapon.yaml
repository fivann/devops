swaps:
  command: cat /proc/swaps

swap:
  description: Swap space is used as virtual memory when the system runs out of physical RAM. The swap file/partition is used to temporarily store data that is not currently being used in memory.
  example:
    - Create a swap partition:
      ```
      /dev/sda2  swap  swap  defaults  0  0
      ```
    - Create a swap file:
      ```
      /mnt/swapfile  none  swap  sw  0  0
      ```
  options:
    - `device`: The device or partition that will be used as swap.
    - `swap_type`: Indicates that the device is being used as swap space.
    - `swap_options`: Options to be used when mounting the device as swap.
    - `dump`: Specifies whether the swap space should be backed up with the dump command.
    - `fsck`: Specifies the order in which filesystem checks should be performed.

swapon:
  description: Activates swap space on a device or file.
  example:
    - Activate a swap partition:
      ```
      sudo swapon /dev/sda2
      ```
    - Activate a swap file:
      ```
      sudo swapon /mnt/swapfile
      ```
  options:
    - `-a, --all`: Activate all swap devices listed in /etc/fstab.
    - `-d, --discard`: Enable discard option when activating swap.
    - `-e, --ifexists`: Silently ignore devices that do not exist.
    - `-p, --priority`: Specify the priority of the swap device.

mount_and_format_swap:
  description: Mounts a new block device and formats it to swap space.
  example:
    - Mount and format a new block device as swap:
      ```
      sudo mkswap /dev/sdb1
      sudo swapon /dev/sdb1
      ```
  steps:
    - Identify the new block device using a tool like `lsblk` or `fdisk`.
    - Create a swap partition using a tool like `fdisk` or `parted`.
    - Format the new partition as swap using the `mkswap` command.
    - Activate the new swap space using the `swapon` command.

mkswap:
  description: Formats a block device or file as swap space.
  example:
    - Format a block device as swap:
      ```
      sudo mkswap /dev/sdb1
      ```
    - Format a file as swap:
      ```
      sudo dd if=/dev/zero of=/mnt/swapfile bs=1G count=4
      sudo chmod 600 /mnt/swapfile
      sudo mkswap /mnt/swapfile
      ```
  options:
    - `-L, --label`: Set a label for the swap space.
    - `-U, --uuid`: Set a UUID for the swap space.

############################################################

# Creating Swap Space on a Linux System
# In this lab, we are tasked with adding swap space to the hosts in order to provide greater virtual memory overhead.

# A partition has been provided, /dev/xvdg1, that should be used as a swap partition. 
# We will need to create the swap space on the partition, enable it, and then add an entry 
# to /etc/fstab to ensure that it will persist through a reboot. We will then create a swap file 
# to be used as an additional swap space. The file should be 1GB in size, created using the dd command.

# Note:
# All tasks should be performed as the root user.
# The UUID of the partition will differ for each attempt.

############################################################

# Create and Enable a Swap Partition
# Our first task is to create and enable a swap partition using /dev/xvdg1. To do so, complete the following:

# Use lsblk to see our current partitions.
# Use the mkswap command to create swap space on /dev/xvdg1:
mkswap /dev/xvdg1

# Use the swapon command to enable the swap partition:
swapon /dev/xvdg1

# Review that it worked by using 
sqapon --show.

############################################################

# Add an entry to /etc/fstab to ensure that the swap partition persists though a reboot (use the UUID)
# Obtain the UUID for the partition using the blkid command

# Use the editor of your choosing (i.e., vim, nano, etc.) to add an entry to /etc/fstab for the swap partition. 
# For our example, we'll be using vim:

vim /etc/fstab

# At the bottom of the file, add the following entry:
UUID=partition_UUID swap swap sw 0 0

############################################################

# Create and Enable a 1 GB Swap File
# Create and enable a 1 GB swap file in the root directory called extraswap:

# Use the dd command to create a 1 GB file called extraswap:
dd if=/dev/zero of=/extraswap bs=1M count=1024

# Update the permissions on the swap file to be read right only for the root user:
chmod 600 /extraswap

# Use the mkswap command to turn extraswap into a swap file:
mkswap /extraswap

# Use the swapon command to enable the swap file:
swapon /extraswap

############################################################

# Add an Entry
# Finally, we need to add an entry to /etc/fstab to ensure that the swap file persists through a reboot (use the full path to the file name).

# Use the editor of your choosing (i.e., vim, nano, etc.) to add an entry to /etc/fstab for the swap file. For our example, we are using vim:
vim /etc/fstab

# At the bottom of the file, add the following entry:
/extraswap swap swap sw 0 0

# Save the file with :wq.

############################################################

